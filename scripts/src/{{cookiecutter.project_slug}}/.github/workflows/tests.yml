{% raw %}name: Tests

on:
  pull_request:
  push:
    branches:
      - 'main'

jobs:
  tests:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php: ["7.4", "8.0"]

    env:
      extensions: ctype, dom, intl, json, mbstring, openssl, xml, zip, zlib
      key: cache-v1 # can be any string, change to clear the extension cache.

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          tools: composer, pecl
          coverage: xdebug
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies (stable)
        run: composer update --prefer-dist

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run Psalm
        run: vendor/bin/psalm --output-format=github

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run PHPUnit
        run: vendor/bin/phpunit --coverage-text

{% endraw %}